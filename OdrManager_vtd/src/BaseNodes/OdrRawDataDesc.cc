
#include "OdrRawDataDesc.hh"
#include "OdrReaderXML.hh"
#include <stdio.h>
#include <string.h>
namespace OpenDrive{RawDataDesc::RawDataDesc():Node(
"\x52\x61\x77\x44\x61\x74\x61\x44\x65\x73\x63"){mOpcode=ODR_OPCODE_RAW_DATA_DESC
;}RawDataDesc::RawDataDesc(RawDataDesc*Nf2Ao):Node(Nf2Ao){mDate=Nf2Ao->mDate;
mSource=Nf2Ao->mSource;mSourceComment=Nf2Ao->mSourceComment;mPostProcessing=
Nf2Ao->mPostProcessing;mPostProcessingComment=Nf2Ao->mPostProcessingComment;}
RawDataDesc::~RawDataDesc(){}void RawDataDesc::printData()const{std::string 
DO9qH("");for(unsigned int i=0;i<mLevel;++i)DO9qH+=std::string(
"\x20\x20\x20\x20");fprintf(stderr,
"\x25\x73\x20\x20\x20\x20\x6d\x44\x61\x74\x65\x3a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x25\x73" "\n"
,DO9qH.c_str(),mDate.c_str());fprintf(stderr,
"\x25\x73\x20\x20\x20\x20\x6d\x53\x6f\x75\x72\x63\x65\x3a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x25\x73" "\n"
,DO9qH.c_str(),mSource.c_str());fprintf(stderr,
"\x25\x73\x20\x20\x20\x20\x6d\x53\x6f\x75\x72\x63\x65\x43\x6f\x6d\x6d\x65\x6e\x74\x3a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x25\x73" "\n"
,DO9qH.c_str(),mSourceComment.c_str());fprintf(stderr,
"\x25\x73\x20\x20\x20\x20\x6d\x50\x6f\x73\x74\x50\x72\x6f\x63\x65\x73\x73\x69\x6e\x67\x3a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x25\x73" "\n"
,DO9qH.c_str(),mPostProcessing.c_str());fprintf(stderr,
"\x25\x73\x20\x20\x20\x20\x6d\x50\x6f\x73\x74\x50\x72\x6f\x63\x65\x73\x73\x69\x6e\x67\x43\x6f\x6d\x6d\x65\x6e\x74\x3a\x20\x20\x20\x25\x73" "\n"
,DO9qH.c_str(),mPostProcessingComment.c_str());}bool RawDataDesc::read(ReaderXML
*F3vnM){mDate=F3vnM->getString("\x64\x61\x74\x65");mSource=F3vnM->getString(
"\x73\x6f\x75\x72\x63\x65");mSourceComment=F3vnM->getString(
"\x73\x6f\x75\x72\x63\x65\x43\x6f\x6d\x6d\x65\x6e\x74");mPostProcessing=F3vnM->
getString("\x70\x6f\x73\x74\x50\x72\x6f\x63\x65\x73\x73\x69\x6e\x67");
mPostProcessingComment=F3vnM->getString(
"\x70\x6f\x73\x74\x50\x72\x6f\x63\x65\x73\x73\x69\x6e\x67\x43\x6f\x6d\x6d\x65\x6e\x74"
);return true;}Node*RawDataDesc::getCopy(bool Mupxf){Node*dzamm=new RawDataDesc(
this);if(Mupxf)deepCopy(dzamm);return dzamm;}}
