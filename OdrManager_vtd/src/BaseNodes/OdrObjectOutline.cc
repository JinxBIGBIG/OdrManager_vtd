
#include "OdrObjectOutline.hh"
#include "OdrReaderXML.hh"
#include <stdio.h>
namespace OpenDrive{ObjectOutline::ObjectOutline():Node(
"\x4f\x62\x6a\x65\x63\x74\x4f\x75\x74\x6c\x69\x6e\x65"){mOpcode=
ODR_OPCODE_OUTLINE;mLevel=3;}ObjectOutline::ObjectOutline(ObjectOutline*Nf2Ao):
Node(Nf2Ao){mId=Nf2Ao->mId;mFillType=Nf2Ao->mFillType;mOuter=Nf2Ao->mOuter;
mClosed=Nf2Ao->mClosed;mLaneType=Nf2Ao->mLaneType;}ObjectOutline::~ObjectOutline
(){}void ObjectOutline::printData()const{fprintf(stderr,
"\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6d\x49\x64\x20\x20\x20\x20\x20\x20\x3a\x20\x20\x25\x64" "\n"
,mId);fprintf(stderr,
"\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6d\x46\x69\x6c\x6c\x54\x79\x70\x65\x3a\x20\x20\x25\x64" "\n"
,mFillType);fprintf(stderr,
"\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6d\x4f\x75\x74\x65\x72\x20\x20\x20\x3a\x20\x20\x25\x73" "\n"
,mOuter?"\x74\x72\x75\x65":"\x66\x61\x6c\x73\x65");fprintf(stderr,
"\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6d\x43\x6c\x6f\x73\x65\x64\x20\x20\x3a\x20\x20\x25\x73" "\n"
,mClosed?"\x74\x72\x75\x65":"\x66\x61\x6c\x73\x65");fprintf(stderr,
"\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6d\x4c\x61\x6e\x65\x54\x79\x70\x65\x3a\x20\x20\x25\x73" "\n"
,mLaneType.c_str());}bool ObjectOutline::read(ReaderXML*F3vnM){mId=F3vnM->getInt
("\x69\x64");mFillType=F3vnM->CgGZS(F3vnM->getString(
"\x66\x69\x6c\x6c\x54\x79\x70\x65"));mOuter=F3vnM->getString(
"\x6f\x75\x74\x65\x72")==std::string("\x74\x72\x75\x65");mClosed=F3vnM->
getString("\x63\x6c\x6f\x73\x65\x64")==std::string("\x74\x72\x75\x65");mLaneType
=F3vnM->getString("\x6c\x61\x6e\x65\x54\x79\x70\x65");return true;}Node*
ObjectOutline::getCopy(bool Mupxf){Node*dzamm=new ObjectOutline(this);if(Mupxf)
deepCopy(dzamm);return dzamm;}}
