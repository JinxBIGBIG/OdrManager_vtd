
#include "OdrPositionRoad.hh"
#include "OdrReaderXML.hh"
#include <stdio.h>
#include <math.h>
namespace OpenDrive{PositionRoad::PositionRoad():Node(
"\x50\x6f\x73\x69\x74\x69\x6f\x6e\x52\x6f\x61\x64"){mOpcode=
ODR_OPCODE_POSITION_ROAD;mLevel=2;}PositionRoad::PositionRoad(PositionRoad*Nf2Ao
):Node(Nf2Ao){mRoadId=Nf2Ao->mRoadId;mS=Nf2Ao->mS;mT=Nf2Ao->mT;mOffsetZ=Nf2Ao->
mOffsetZ;mOffsetH=Nf2Ao->mOffsetH;mPitch=Nf2Ao->mPitch;mRoll=Nf2Ao->mRoll;}
PositionRoad::~PositionRoad(){}void PositionRoad::printData()const{fprintf(
stderr,
"\x20\x20\x20\x20\x20\x20\x20\x20\x6d\x52\x6f\x61\x64\x49\x64\x3a\x20\x20\x25\x73" "\n"
,mRoadId.c_str());fprintf(stderr,
"\x20\x20\x20\x20\x20\x20\x20\x20\x6d\x53\x3a\x20\x20\x20\x20\x20\x20\x20\x25\x2e\x31\x30\x6c\x66" "\n"
,mS);fprintf(stderr,
"\x20\x20\x20\x20\x20\x20\x20\x20\x6d\x54\x3a\x20\x20\x20\x20\x20\x20\x20\x25\x2e\x31\x30\x6c\x66" "\n"
,mT);fprintf(stderr,
"\x20\x20\x20\x20\x20\x20\x20\x20\x6d\x4f\x66\x66\x73\x65\x74\x5a\x3a\x20\x25\x2e\x31\x30\x6c\x66" "\n"
,mOffsetZ);fprintf(stderr,
"\x20\x20\x20\x20\x20\x20\x20\x20\x6d\x4f\x66\x66\x73\x65\x74\x48\x3a\x20\x25\x2e\x31\x30\x6c\x66" "\n"
,mOffsetH);fprintf(stderr,
"\x20\x20\x20\x20\x20\x20\x20\x20\x6d\x50\x69\x74\x63\x68\x3a\x20\x20\x20\x25\x2e\x31\x30\x6c\x66" "\n"
,mPitch);fprintf(stderr,
"\x20\x20\x20\x20\x20\x20\x20\x20\x6d\x52\x6f\x6c\x6c\x3a\x20\x20\x20\x20\x25\x2e\x31\x30\x6c\x66" "\n"
,mRoll);}bool PositionRoad::read(ReaderXML*F3vnM){mRoadId=F3vnM->getString(
"\x72\x6f\x61\x64\x49\x64");mS=F3vnM->getDouble("\x73");mT=F3vnM->getDouble(
"\x74");mOffsetZ=F3vnM->getDouble("\x7a\x4f\x66\x66\x73\x65\x74");mOffsetH=F3vnM
->getDouble("\x68\x4f\x66\x66\x73\x65\x74");mPitch=F3vnM->getDouble(
"\x70\x69\x74\x63\x68");mRoll=F3vnM->getDouble("\x72\x6f\x6c\x6c");return true;}
Node*PositionRoad::getCopy(bool Mupxf){Node*dzamm=new PositionRoad(this);if(
Mupxf)deepCopy(dzamm);return dzamm;}}
