
#include "OdrLaneMaterial.hh"
#include "OdrReaderXML.hh"
#include <stdio.h>
namespace OpenDrive{LaneMaterial::LaneMaterial():Node(
"\x4c\x61\x6e\x65\x4d\x61\x74\x65\x72\x69\x61\x6c"){mOpcode=
ODR_OPCODE_LANE_MATERIAL;mLevel=3;}LaneMaterial::LaneMaterial(LaneMaterial*Nf2Ao
):Node(Nf2Ao){mOffset=Nf2Ao->mOffset;mCode=Nf2Ao->mCode;mFriction=Nf2Ao->
mFriction;mRoughness=Nf2Ao->mRoughness;mSurface=Nf2Ao->mSurface;}LaneMaterial::~
LaneMaterial(){}void LaneMaterial::printData()const{fprintf(stderr,
"\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x4f\x66\x66\x73\x65\x74\x3a\x20\x20\x20\x20\x25\x2e\x31\x30\x6c\x66" "\n"
,mOffset);fprintf(stderr,
"\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x43\x6f\x64\x65\x3a\x20\x20\x20\x20\x20\x20\x25\x64" "\n"
,mCode);fprintf(stderr,
"\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x46\x72\x69\x63\x74\x69\x6f\x6e\x3a\x20\x20\x25\x2e\x31\x30\x6c\x66" "\n"
,mFriction);fprintf(stderr,
"\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x52\x6f\x75\x67\x68\x6e\x65\x73\x73\x3a\x20\x25\x2e\x31\x30\x6c\x66" "\n"
,mRoughness);fprintf(stderr,
"\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x53\x75\x72\x66\x61\x63\x65\x3a\x20\x20\x20\x25\x73" "\n"
,mSurface.c_str());}bool LaneMaterial::read(ReaderXML*F3vnM){mOffset=F3vnM->
getDouble("\x73\x4f\x66\x66\x73\x65\x74");mCode=F3vnM->getUInt(
"\x6d\x61\x74\x65\x72\x69\x61\x6c");mFriction=F3vnM->getDouble(
"\x66\x72\x69\x63\x74\x69\x6f\x6e");mRoughness=F3vnM->getDouble(
"\x72\x6f\x75\x67\x68\x6e\x65\x73\x73");mSurface=F3vnM->getString(
"\x73\x75\x72\x66\x61\x63\x65");return true;}Node*LaneMaterial::getCopy(bool 
Mupxf){Node*dzamm=new LaneMaterial(this);if(Mupxf)deepCopy(dzamm);return dzamm;}
}
